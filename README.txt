a. Name: Zhixuan Yang

b. Student ID: yangzhix 9460865994

c. In this project, I have completed programs that allows two clients to pass two names, and back-end serverC, serverT, serverS, and serverP will calculate and generate the shortest path between these two names based on the edgelist and scores file. After the calculation these two clients will show the results on their screen. (I did NOT do the optional part)

d. (1)clientA.cpp: give the first node name(input), and display the final result, in which shows the shortest path and distance.

   (2)clientB.cpp: give the second node name(input), and display the final result, in which shows the shortest path and distance.

   (3)central.cpp: the central backend server. It receive the input from clientA and clientB, and sent them to other back-end servers. After each task is finished, central server gets the result , and sent it to next server. ServerC will first sent the request to serverT, and get the topology of given input from serverT; second, it will sent the request to serverS to get score information. When serverC gets the result from serverS. It will sent the request to serverP. After all, this server send the result to clientA and clientB.

   (4)serverT.cpp: the backend server to get the topology based given input from clientA and clientB. After finish the task, sent the result to central server.

   (5)serverS.cpp: the backend server to generate the related score info based given input from clientA and clientB. After finish the task, sent the result to central server.

   (6)serverP.cpp: the backend server to calculate the shortest path and distance based given input from clientA and clientB. After finish the task, sent the result to central server.  

e. The format to exchange data between every server is primarily string. Before each exchange, I convert these data into a string object, and between every single information I used a space to separate them. For example, the topology generated by serverT will "Rachael Victory Rachael King Rachael Oliver", every single information was separated by a space. So, I have a function to split the input data in my every code file, and then store the data into a vector for further process.
 
The order of exchange is clientA and clientB send the input to central server, and central server send the request to serverT. After serverT finished, it send the request to serverS. After this central server sent the request to serverP. After serverP sent back the result to central server, central server get the result, and send back to clientA and clientB.

g. The shortest path between two nodes are too large, which means it exceed the maximum data bytes size 40000, the program will fail  

h. I used https://beej.us/guide/bgnet/html/ as a reference to do the socket code, and https://www.cplusplus.com/reference/string/string/erase/ as a reference to remove NULL from a string, which occurs when read data from file. I also used algorithm 4th as a reference book (https://algs4.cs.princeton.edu/code/)  to implement the related algorithm, disjoint set and dijkstra algorithm. The code was written in Java, so I used https://www.javatpoint.com/cpp-dijkstra-algorithm-using-priority-queue and https://www.geeksforgeeks.org/union-find-algorithm-set-2-union-by-rank/ as reference to implement the C++ version. I have write the inline comment to mention these code.
	